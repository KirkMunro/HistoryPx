<?xml version="1.0"?>
<ModuleObject xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" fVersion="1.1" type="Script" mclass="Module" useSupports="false">
  <Name>HistoryPx</Name>
  <Version>1.0.0.8</Version>
  <Description>HistoryPx uses proxy commands to add extended history information to PowerShell. This includes the duration of a command, a flag indicating whether a command was successful or not, the output generated by a command (limited to a configurable maximum value), the error generated by a command, and the actual number of objects returned as output and as error records.  HistoryPx also adds a "__" variable to PowerShell that captures the last output that you may have wanted to capture, and includes commands to configure how it decides when output should be captured.  Lastly, HistoryPx includes commands to manage the memory footprint that is used by extended history information.</Description>
  <HasManifest>true</HasManifest>
  <OverridePostCount>false</OverridePostCount>
  <FetchPostCount xsi:nil="true" />
  <Cmdlets>
    <CmdletObject verb="Get" noun="CaptureOutputConfiguration">
      <Name>Get-CaptureOutputConfiguration</Name>
      <GeneralHelp>
        <Synopsis />
        <Description />
        <Notes />
        <InputType />
        <InputUrl />
        <InputTypeDescription />
        <ReturnType />
        <ReturnUrl />
        <ReturnTypeDescription />
      </GeneralHelp>
      <ParamSets>
        <CommandParameterSetInfo2 Name="__AllParameterSets" Params="Verbose Debug ErrorAction WarningAction ErrorVariable WarningVariable OutVariable OutBuffer PipelineVariable" />
      </ParamSets>
      <Syntax>
        <string>Get-CaptureOutputConfiguration</string>
      </Syntax>
      <Parameters />
      <Examples />
      <RelatedLinks />
      <SupportInformation ad="false" rsat="false" ps2="false" ps3="false" ps4="false" ps5="false" wxp="false" wv="false" w7="false" w8="false" w81="false" w2k3s="false" w2k3e="false" w2k3d="false" w2k8s="false" w2k8e="false" w2k8d="false" w2k8r2s="false" w2k8r2e="false" w2k8r2d="false" w2k12s="false" w2k12d="false" w2k12r2s="false" w2k12r2d="false" />
      <Publish>false</Publish>
    </CmdletObject>
    <CmdletObject verb="Get" noun="ExtendedHistoryConfiguration">
      <Name>Get-ExtendedHistoryConfiguration</Name>
      <GeneralHelp>
        <Synopsis />
        <Description />
        <Notes />
        <InputType />
        <InputUrl />
        <InputTypeDescription />
        <ReturnType />
        <ReturnUrl />
        <ReturnTypeDescription />
      </GeneralHelp>
      <ParamSets>
        <CommandParameterSetInfo2 Name="__AllParameterSets" Params="Verbose Debug ErrorAction WarningAction ErrorVariable WarningVariable OutVariable OutBuffer PipelineVariable" />
      </ParamSets>
      <Syntax>
        <string>Get-ExtendedHistoryConfiguration</string>
      </Syntax>
      <Parameters />
      <Examples />
      <RelatedLinks />
      <SupportInformation ad="false" rsat="false" ps2="false" ps3="false" ps4="false" ps5="false" wxp="false" wv="false" w7="false" w8="false" w81="false" w2k3s="false" w2k3e="false" w2k3d="false" w2k8s="false" w2k8e="false" w2k8d="false" w2k8r2s="false" w2k8r2e="false" w2k8r2d="false" w2k12s="false" w2k12d="false" w2k12r2s="false" w2k12r2d="false" />
      <Publish>false</Publish>
    </CmdletObject>
    <CmdletObject verb="Set" noun="CaptureOutputConfiguration">
      <Name>Set-CaptureOutputConfiguration</Name>
      <GeneralHelp>
        <Synopsis />
        <Description />
        <Notes />
        <InputType />
        <InputUrl />
        <InputTypeDescription />
        <ReturnType />
        <ReturnUrl />
        <ReturnTypeDescription />
      </GeneralHelp>
      <ParamSets>
        <CommandParameterSetInfo2 Name="__AllParameterSets" Params="VariableName MaximumItemCount CaptureValueTypes CaptureNull ExcludeType IncludeType PassThru Verbose Debug ErrorAction WarningAction ErrorVariable WarningVariable OutVariable OutBuffer PipelineVariable WhatIf Confirm" />
      </ParamSets>
      <Syntax>
        <string>Set-CaptureOutputConfiguration [[-VariableName] &lt;String&gt;] [[-MaximumItemCount] &lt;Int32&gt;] [-CaptureValueTypes] [-CaptureNull] [[-ExcludeType] &lt;String[]&gt;] [[-IncludeType] &lt;String[]&gt;] [-PassThru] [-WhatIf] [-Confirm]</string>
      </Syntax>
      <Parameters>
        <ParameterDescription type="String" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="true" pos="0" globbing="false">
          <Name>VariableName</Name>
          <Attributes>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
            <string>System.Management.Automation.ValidateNotNullOrEmptyAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
          </Attributes>
          <Aliases />
          <Description />
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="Int32" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="true" pos="1" globbing="false">
          <Name>MaximumItemCount</Name>
          <Attributes>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
            <string>System.Management.Automation.ValidateRangeAttribute</string>
            <string>System.Management.Automation.ValidateNotNullAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
          </Attributes>
          <Aliases />
          <Description />
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="SwitchParameter" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>CaptureValueTypes</Name>
          <Attributes>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
          </Attributes>
          <Aliases />
          <Description />
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="SwitchParameter" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>CaptureNull</Name>
          <Attributes>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
          </Attributes>
          <Aliases />
          <Description />
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="String[]" varLen="true" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="true" pos="2" globbing="false">
          <Name>ExcludeType</Name>
          <Attributes>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
            <string>System.Management.Automation.ValidateNotNullOrEmptyAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
          </Attributes>
          <Aliases />
          <Description />
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="String[]" varLen="true" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="true" pos="3" globbing="false">
          <Name>IncludeType</Name>
          <Attributes>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
            <string>System.Management.Automation.ValidateNotNullOrEmptyAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
          </Attributes>
          <Aliases />
          <Description />
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="SwitchParameter" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>PassThru</Name>
          <Attributes>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
          </Attributes>
          <Aliases />
          <Description />
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="SwitchParameter" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>WhatIf</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.AliasAttribute</string>
          </Attributes>
          <Aliases>
            <string>wi</string>
          </Aliases>
          <Description />
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="SwitchParameter" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>Confirm</Name>
          <Attributes>
            <string>System.Management.Automation.AliasAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
          </Attributes>
          <Aliases>
            <string>cf</string>
          </Aliases>
          <Description />
          <DefaultValue />
        </ParameterDescription>
      </Parameters>
      <Examples />
      <RelatedLinks />
      <SupportInformation ad="false" rsat="false" ps2="false" ps3="false" ps4="false" ps5="false" wxp="false" wv="false" w7="false" w8="false" w81="false" w2k3s="false" w2k3e="false" w2k3d="false" w2k8s="false" w2k8e="false" w2k8d="false" w2k8r2s="false" w2k8r2e="false" w2k8r2d="false" w2k12s="false" w2k12d="false" w2k12r2s="false" w2k12r2d="false" />
      <Publish>false</Publish>
    </CmdletObject>
    <CmdletObject verb="Set" noun="ExtendedHistoryConfiguration">
      <Name>Set-ExtendedHistoryConfiguration</Name>
      <GeneralHelp>
        <Synopsis />
        <Description />
        <Notes />
        <InputType />
        <InputUrl />
        <InputTypeDescription />
        <ReturnType />
        <ReturnUrl />
        <ReturnTypeDescription />
      </GeneralHelp>
      <ParamSets>
        <CommandParameterSetInfo2 Name="__AllParameterSets" Params="MaximumEntryCount MaximumItemCountPerEntry PassThru Verbose Debug ErrorAction WarningAction ErrorVariable WarningVariable OutVariable OutBuffer PipelineVariable WhatIf Confirm" />
      </ParamSets>
      <Syntax>
        <string>Set-ExtendedHistoryConfiguration [[-MaximumEntryCount] &lt;Int32&gt;] [[-MaximumItemCountPerEntry] &lt;Int32&gt;] [-PassThru] [-WhatIf] [-Confirm]</string>
      </Syntax>
      <Parameters>
        <ParameterDescription type="Int32" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="true" pos="0" globbing="false">
          <Name>MaximumEntryCount</Name>
          <Attributes>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
            <string>System.Management.Automation.ValidateRangeAttribute</string>
            <string>System.Management.Automation.ValidateNotNullAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
          </Attributes>
          <Aliases />
          <Description />
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="Int32" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="true" pos="1" globbing="false">
          <Name>MaximumItemCountPerEntry</Name>
          <Attributes>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
            <string>System.Management.Automation.ValidateRangeAttribute</string>
            <string>System.Management.Automation.ValidateNotNullAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
          </Attributes>
          <Aliases />
          <Description />
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="SwitchParameter" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>PassThru</Name>
          <Attributes>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
          </Attributes>
          <Aliases />
          <Description />
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="SwitchParameter" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>WhatIf</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.AliasAttribute</string>
          </Attributes>
          <Aliases>
            <string>wi</string>
          </Aliases>
          <Description />
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="SwitchParameter" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>Confirm</Name>
          <Attributes>
            <string>System.Management.Automation.AliasAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
          </Attributes>
          <Aliases>
            <string>cf</string>
          </Aliases>
          <Description />
          <DefaultValue />
        </ParameterDescription>
      </Parameters>
      <Examples />
      <RelatedLinks />
      <SupportInformation ad="false" rsat="false" ps2="false" ps3="false" ps4="false" ps5="false" wxp="false" wv="false" w7="false" w8="false" w81="false" w2k3s="false" w2k3e="false" w2k3d="false" w2k8s="false" w2k8e="false" w2k8d="false" w2k8r2s="false" w2k8r2e="false" w2k8r2d="false" w2k12s="false" w2k12d="false" w2k12r2s="false" w2k12r2d="false" />
      <Publish>false</Publish>
    </CmdletObject>
    <CmdletObject verb="Clear" noun="History">
      <Name>Clear-History</Name>
      <GeneralHelp>
        <Synopsis>Deleted entries from the command history.</Synopsis>
        <Description>The Clear-History cmdlet deletes commands from the command history, that is, the list of commands entered during the current session.

Without parameters, Clear-History deletes all commands from the session history, but you can use the parameters of Clear-History to delete selected commands.</Description>
        <Notes>The session history is a list of the commands entered during the session. You can view the history, add and delete commands, and run commands from the history. For more information, see about_History.

Deleting a command from the history does not change the history IDs of the remaining items in the command history.</Notes>
        <InputType>None</InputType>
        <InputUrl />
        <InputTypeDescription>You cannot pipe objects to Clear-History.</InputTypeDescription>
        <ReturnType>None</ReturnType>
        <ReturnUrl />
        <ReturnTypeDescription>This cmdlet does not generate any output.</ReturnTypeDescription>
      </GeneralHelp>
      <ParamSets>
        <CommandParameterSetInfo2 Name="IDParameter" Params="Id Count Newest Verbose Debug ErrorAction WarningAction ErrorVariable WarningVariable OutVariable OutBuffer PipelineVariable" />
        <CommandParameterSetInfo2 Name="CommandLineParameter" Params="CommandLine Count Newest Verbose Debug ErrorAction WarningAction ErrorVariable WarningVariable OutVariable OutBuffer PipelineVariable" />
      </ParamSets>
      <Syntax>
        <string>Clear-History [[-Id] &lt;Int32[]&gt;] [[-Count] &lt;Int32&gt;] [-Newest]</string>
        <string>Clear-History [-CommandLine &lt;String[]&gt;] [[-Count] &lt;Int32&gt;] [-Newest]</string>
      </Syntax>
      <Parameters>
        <ParameterDescription type="Int32[]" varLen="true" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="true" pos="0" globbing="false">
          <Name>Id</Name>
          <Attributes>
            <string>System.Management.Automation.ValidateRangeAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Deletes commands with the specified history IDs.

To find the history ID of a command, use Get-History.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="Int32" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="true" pos="1" globbing="false">
          <Name>Count</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ValidateRangeAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Clears the specified number of history entries, beginning with the oldest entry in the history.

If you use the Count and Id parameters in the same command, the cmdlet clears the number of entries specified by the Count parameter, beginning with the entry specified by the Id parameter. For example, if Count is 10 and Id is 30, Clear-History clears items 21 through 30 inclusive.

If you use the Count and CommandLine parameters in the same command, Clear-History clears the number of entries specified by the Count parameter, beginning with the entry specified by the CommandLine parameter.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="SwitchParameter" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>Newest</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Deletes the newest entries in the history. By default, Clear-History deletes the oldest entries in the history.</Description>
          <DefaultValue>False</DefaultValue>
        </ParameterDescription>
        <ParameterDescription type="String[]" varLen="true" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="true">
          <Name>CommandLine</Name>
          <Attributes>
            <string>System.Management.Automation.ValidateNotNullOrEmptyAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Deletes commands with the specified text strings. If you enter more than one string, Clear-History deletes commands with any of the strings.</Description>
          <DefaultValue />
        </ParameterDescription>
      </Parameters>
      <Examples>
        <Example>
          <Name>-------------------------- EXAMPLE 1 --------------------------</Name>
          <Cmd>PS C:\&gt; Clear-History</Cmd>
          <Description>Deletes all commands from the session history.</Description>
        </Example>
        <Example>
          <Name>-------------------------- EXAMPLE 2 --------------------------</Name>
          <Cmd>PS C:\&gt; Clear-History -Id 23,25</Cmd>
          <Description>Deletes the commands with history IDs 23 and 25.</Description>
        </Example>
        <Example>
          <Name>-------------------------- EXAMPLE 3 --------------------------</Name>
          <Cmd>PS C:\&gt; Clear-History -Command *help*,*command</Cmd>
          <Description>Deletes commands that include "help" or end in "command".</Description>
        </Example>
        <Example>
          <Name>-------------------------- EXAMPLE 4 --------------------------</Name>
          <Cmd>PS C:\&gt; Clear-History -Count 10 -Newest</Cmd>
          <Description>Deletes the 10 newest commands from the history.</Description>
        </Example>
        <Example>
          <Name>-------------------------- EXAMPLE 5 --------------------------</Name>
          <Cmd>PS C:\&gt; Clear-History -Id 10 -Count 3</Cmd>
          <Description>Deletes the three oldest commands, beginning with the entry with ID 10.</Description>
        </Example>
      </Examples>
      <RelatedLinks>
        <RelatedLink>
          <LinkText>Add-History</LinkText>
          <LinkUrl />
        </RelatedLink>
        <RelatedLink>
          <LinkText>Get-History</LinkText>
          <LinkUrl />
        </RelatedLink>
        <RelatedLink>
          <LinkText>Invoke-History</LinkText>
          <LinkUrl />
        </RelatedLink>
        <RelatedLink>
          <LinkText>about_History</LinkText>
          <LinkUrl />
        </RelatedLink>
      </RelatedLinks>
      <SupportInformation ad="false" rsat="false" ps2="false" ps3="false" ps4="false" ps5="false" wxp="false" wv="false" w7="false" w8="false" w81="false" w2k3s="false" w2k3e="false" w2k3d="false" w2k8s="false" w2k8e="false" w2k8d="false" w2k8r2s="false" w2k8r2e="false" w2k8r2d="false" w2k12s="false" w2k12d="false" w2k12r2s="false" w2k12r2d="false" />
      <Publish>false</Publish>
    </CmdletObject>
    <CmdletObject verb="Get" noun="History">
      <Name>Get-History</Name>
      <GeneralHelp>
        <Synopsis>Gets a list of the commands entered during the current session.</Synopsis>
        <Description>The Get-History cmdlet gets the session history, that is, the list of commands entered during the current session.

Windows PowerShell automatically maintains a history of each session. The number of entries in the session history is determined by the value of the $MaximumHistoryCount preference variable. Beginning in Windows PowerShell 3.0, the default value is 4096.

You can save the session history in XML or CSV format. By default, history files are saved in the home directory, but you can save the file in any location.

For more information about the history features in Windows PowerShell, see about_History (http://go.microsoft.com/fwlink/?LinkID=113233).</Description>
        <Notes>The session history is a list of the commands entered during the session. The session history represents the order of execution, the status, and the start and end times of the command. As you enter each command, Windows PowerShell adds it to the history so that you can reuse it. For more information about the command history, see about_History (http://go.microsoft.com/fwlink/?LinkID=113233).

When using the HistoryPx module, the default output for Get-History changes. In addition to the command and its ID (which indicates the order of execution), HistoryPx includes the following extra information in the default output: the command duration, a flag indicating whether the command succeeded or not, the number of errors that were generated by the command (including an exclamation mark if the last error was a terminating error), and the collection of objects that were output by the command. To manage how many history entries can contain extended history information as well as the maximum number of output objects per entry, use the Set-ExtendedHistoryConfiguration command.

Beginning in Windows PowerShell 3.0, the default value of the $MaximumHistoryCount preference variable is 4096. For more information about the $MaximumHistoryCount variable, see about_Preference_Variables (http://go.microsoft.com/fwlink/?LinkID=113248).</Notes>
        <InputType>Int64</InputType>
        <InputUrl />
        <InputTypeDescription>You can pipe a history ID to Get-History</InputTypeDescription>
        <ReturnType>Microsoft.PowerShell.Commands.HistoryInfo#Extended</ReturnType>
        <ReturnUrl />
        <ReturnTypeDescription>Get-History returns an extended history object for each history item that it gets.</ReturnTypeDescription>
      </GeneralHelp>
      <ParamSets>
        <CommandParameterSetInfo2 Name="__AllParameterSets" Params="Id Count Verbose Debug ErrorAction WarningAction ErrorVariable WarningVariable OutVariable OutBuffer PipelineVariable" />
      </ParamSets>
      <Syntax>
        <string>Get-History [[-Id] &lt;Int64[]&gt;] [[-Count] &lt;Int32&gt;]</string>
      </Syntax>
      <Parameters>
        <ParameterDescription type="Int64[]" varLen="true" required="false" dynamic="false" pipeRemaining="false" pipe="true" pipeProp="false" isPos="true" pos="0" globbing="false">
          <Name>Id</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ValidateRangeAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Specifies the ID number of an entry in the session history. Get-History gets only the specified entry. If you use both the Id and Count parameters in a command, Get-History gets the most recent entries ending with the entry specified by the Id parameter.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="Int32" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="true" pos="1" globbing="false">
          <Name>Count</Name>
          <Attributes>
            <string>System.Management.Automation.ValidateRangeAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Displays the specified number of the most recent history entries. By, default, Get-History gets all entries in the session history. If you use both the Count and Id parameters in a command, the display ends with the command that is specified by the Id parameter.</Description>
          <DefaultValue />
        </ParameterDescription>
      </Parameters>
      <Examples>
        <Example>
          <Name>-------------------------- EXAMPLE 1 --------------------------</Name>
          <Cmd>PS C:\&gt; Get-History</Cmd>
          <Description>This command gets the entries in the session history.</Description>
        </Example>
        <Example>
          <Name>-------------------------- EXAMPLE 2 --------------------------</Name>
          <Cmd>PS C:\&gt; Get-History | Where-Object {$_.CommandLine -like "*Service*"}</Cmd>
          <Description>This command gets entries in the command history that include "service". The first command gets all entries in the session history. The pipeline operator (|) passes the results to the Where-Object cmdlet, which selects only the commands that include "service".</Description>
        </Example>
        <Example>
          <Name>-------------------------- EXAMPLE 3 --------------------------</Name>
          <Cmd>PS C:\&gt; Get-History -Id 7 -Count 5 | Export-Csv History.csv</Cmd>
          <Description>This command gets the five most recent history entries ending with entry 7. The pipeline operator (|) passes the result to the Export-Csv cmdlet, which formats the history as comma-separated text and saves it in the History.csv file. The file includes the data that is displayed when you format the history as a list, including the status and start and end times of the command.</Description>
        </Example>
        <Example>
          <Name>-------------------------- EXAMPLE 4 --------------------------</Name>
          <Cmd>PS C:\&gt; Get-History -Count 1</Cmd>
          <Description>This command gets the last (most recently entered) command in the command history. It uses the Count parameter to display just one command. By default, Get-History gets the most recent commands. This command can be abbreviated to "h -c 1" and is equivalent to pressing the up-arrow key.</Description>
        </Example>
        <Example>
          <Name>-------------------------- EXAMPLE 5 --------------------------</Name>
          <Cmd>PS C:\&gt; Get-History | Format-List -Property *</Cmd>
          <Description>This command displays all of the properties of entries in the session history. The pipeline operator (|) passes the results of a Get-History command to the Format-List cmdlet, which displays all of the properties of each history entry, including the ID, command, execution status, start and end times of the command, duration, a flag indicating success or failure, the output, the output count, the errors, the error count, and a flag indicating whether or not the output was truncated.</Description>
        </Example>
      </Examples>
      <RelatedLinks>
        <RelatedLink>
          <LinkText>Add-History</LinkText>
          <LinkUrl />
        </RelatedLink>
        <RelatedLink>
          <LinkText>Clear-History</LinkText>
          <LinkUrl />
        </RelatedLink>
        <RelatedLink>
          <LinkText>Invoke-History</LinkText>
          <LinkUrl />
        </RelatedLink>
        <RelatedLink>
          <LinkText>about_History</LinkText>
          <LinkUrl />
        </RelatedLink>
      </RelatedLinks>
      <SupportInformation ad="false" rsat="false" ps2="false" ps3="false" ps4="false" ps5="false" wxp="false" wv="false" w7="false" w8="false" w81="false" w2k3s="false" w2k3e="false" w2k3d="false" w2k8s="false" w2k8e="false" w2k8d="false" w2k8r2s="false" w2k8r2e="false" w2k8r2d="false" w2k12s="false" w2k12d="false" w2k12r2s="false" w2k12r2d="false" />
      <Publish>false</Publish>
    </CmdletObject>
    <CmdletObject verb="Out" noun="Default">
      <Name>Out-Default</Name>
      <GeneralHelp>
        <Synopsis>Sends the output to the default formatter and to the default output cmdlet.</Synopsis>
        <Description>The Out-Default cmdlet sends output to the default formatter and the default output cmdlet. This cmdlet has no effect on the formatting or output of Windows PowerShell commands. It is a placeholder that lets you write your own Out-Default function or cmdlet.</Description>
        <Notes>You should never manually call Out-Default. Out-Default is implicitly invoked automatically at the end of every command.</Notes>
        <InputType>object</InputType>
        <InputUrl />
        <InputTypeDescription>You can pipe any object into Out-Default.</InputTypeDescription>
        <ReturnType>None</ReturnType>
        <ReturnUrl />
        <ReturnTypeDescription />
      </GeneralHelp>
      <ParamSets>
        <CommandParameterSetInfo2 Name="__AllParameterSets" Params="InputObject Verbose Debug ErrorAction WarningAction ErrorVariable WarningVariable OutVariable OutBuffer PipelineVariable" />
      </ParamSets>
      <Syntax>
        <string>Out-Default [-InputObject &lt;PSObject&gt;]</string>
      </Syntax>
      <Parameters>
        <ParameterDescription type="PSObject" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="true" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>InputObject</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Accepts input into the cmdlet.</Description>
          <DefaultValue />
        </ParameterDescription>
      </Parameters>
      <Examples />
      <RelatedLinks />
      <SupportInformation ad="false" rsat="false" ps2="false" ps3="false" ps4="false" ps5="false" wxp="false" wv="false" w7="false" w8="false" w81="false" w2k3s="false" w2k3e="false" w2k3d="false" w2k8s="false" w2k8e="false" w2k8d="false" w2k8r2s="false" w2k8r2e="false" w2k8r2d="false" w2k12s="false" w2k12d="false" w2k12r2s="false" w2k12r2d="false" />
      <Publish>false</Publish>
    </CmdletObject>
  </Cmdlets>
</ModuleObject>